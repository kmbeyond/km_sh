
#------Steps
-We create a key that is stored in keyring
-Generate public & private key files to be used on other machines
-distribute publc key for other party to encrypt data
-Sender encrypts with Public key
-Decrypt that file with Private key (or from the machine that generated keys)


#---------generate GPG key
>gpg â€“-gen-key
gpg (GnuPG) 2.0.14; Copyright (C) 2009 Free Software Foundation, Inc.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Please select what kind of key you want:
   (1) RSA and RSA (default)
   (2) DSA and Elgamal
   (3) DSA (sign only)
   (4) RSA (sign only)
Your selection? 2
DSA keys may be between 1024 and 3072 bits long.
What keysize do you want? (2048) <Just enter to accept default 2048>

Please specify how long the key should be valid.
         0 = key does not expire
      <n>  = key expires in n days
      <n>w = key expires in n weeks
      <n>m = key expires in n months
      <n>y = key expires in n years
Key is valid for? (0)
Real name: KM KM
Email address: km@km.com
Comment: Generated by xx to encrypt data for yy
You selected this USER-ID:
    "KM KM (Generated by xx to encrypt data for yy) <km@km.com>"

Change (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit? O
You need a Passphrase to protect your secret key.

kiran1234567890


#Generate public & private keys

--Publc key
gpg --output km_key_pub.pgp --armor --export km@km.com
#CAN TRY THIS TOO: gpg --armor --export km@km.com > upside_pub.asc

--Private key
gpg --output km_key_pri.pgp --armor --export-secret-key km@km.com



#-----import public key
gpg --import km_public_key.asc
gpg --edit km@km.com
command>trust
####>Your decision? 5
####>y
####>quit

#Check keys using:
gpg -k
gpg --list-keys
gpg --list-keys km@km.com

#-------encrypt file
cat my_file.txt | gpg --batch --trust-model always --encrypt -a -r km@km.com -r encrypted_file.pgp


#decrypt
passphrase="kiran1234567890"
echo "$passphrase" | gpg --batch --yes --passphrase-fd 0 encrypted_file.pgp
=> my_file.txt


#----------other commands

gpg --list-secret-keys
=> lists secret keys

gpg --delete-key km@km.com


